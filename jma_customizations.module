<?php
define('EVENT_IMAGE', 'custom_833');

use Drupal\Core\Language\LanguageInterface;
use Drupal\views\Plugin\views\cache\CachePluginBase;
use Drupal\views\Plugin\views\query\QueryPluginBase;
use Drupal\views\Plugin\views\PluginBase;
use Drupal\views\ViewExecutable;
use Drupal\Core\Form\FormStateInterface;
use Drupal\views\Views;
use CRM_Aoservicelisting_ExtensionUtil as E;
use Drupal\search_api\Entity\Index;

function jma_customizations_css_alter(&$css, \Drupal\Core\Asset\AttachedAssetsInterface $assets)
{
    $uri = \Drupal\Core\Url::fromRoute('<current>');
    $current_uri = $uri->getInternalPath();
    $paths = [
        "civicrm/contribute/transact",
        "civicrm/event/register",
        "civicrm/event/info",
        "civicrm-event",
        "civicrm/profile/view",
        "civicrm/profile/edit",
        "civicrm/profile/create",
        "civicrm/contact/map",
        "webform/civicrm_contact",
        "webform/civicrm_contact/confirmation",
        "civicrm/user",
        "civicrm/feedback",
        "civicrm/service-listing-application",
        "civicrm/service-listing-application-confirm",
        "civicrm/service-listing-thankyou",
        "civicrm/grant/transact",
    ];
    if (strpos($current_uri, 'civicrm') !== false && !in_array($current_uri, $paths)) {
        unset($css['themes/contrib/adminimal_theme/css/adminimal.css']);
        unset($css['themes/custom/de_theme/dist/css/de_theme.css']);
        unset($css['modules/contrib/adminimal_admin_toolbar/css/adminimal_admin_toolbar.css']);
    }
}

function jma_customizations_preprocess_views_view_field(&$variables) {
  $view = $variables['view'];
  $field = $variables['field'];
  $modulePath = \Drupal::moduleHandler()->getModule('jma_customizations')->getPath();
  if ($view->storage->id() == 'contact_map') {
    if ($field->field == 'display_name') {
      $variables['output'] = \Drupal\Core\Render\Markup::create(str_replace('Self-employed ', '', $variables['output']));
    }
  }
  if ($view->storage->id() == 'service_listing') {
    if ($field->field == 'display_name') {
      if (!empty($view->args[0])) {
        $content = $variables['output'];
        $contactDetails = \civicrm_api3('Contact', 'get', ['id' => $view->args[0], 'return' => ['custom_897', 'custom_896', 'custom_911', 'custom_895']]);
        if ((!empty($contactDetails['values'][$contactDetails['id']]['custom_911']) && !in_array('None', $contactDetails['values'][$contactDetails['id']]['custom_911'])) ||
          !empty($contactDetails['values'][$contactDetails['id']]['custom_895'])) {
          $content  = '<img src="'. file_create_url($modulePath . '/img/icon_verified_24px.svg') . '" title="' . E::ts('Verified listing') . '"> ' . $content;
        }
      }
      $variables['output'] = \Drupal\Core\Render\Markup::create(str_replace('Self-employed ', '', $content));
    }
    if ($field->field == 'contact_sub_type') {
      $title = $variables['output'];
      if (!empty($view->args[0])) {
        $contactDetails = \civicrm_api3('Contact', 'get', ['id' => $view->args[0], 'return' => ['custom_897', 'custom_896', 'custom_911', 'custom_895']]);
        if (!empty($contactDetails['values'])) {
          if (!empty($contactDetails['values'][$contactDetails['id']]['custom_897'])) {
            $servicesProvided = $contactDetails['values'][$contactDetails['id']]['custom_897'];
            if (in_array(3, $servicesProvided)) {
              $title .= ' <img src="'. file_create_url($modulePath . '/img/icon_local_travel_24px.png') . '" title="' . E::ts('Travels to nearby areas') . '">';
            }
            if (in_array(4, $servicesProvided)) {
              $title .= ' <img src="'. file_create_url($modulePath . '/img/icon_remote_travel_24px.png') . '" title="' . E::ts('Travels to remote areas') . '">';
            }
          }
          if (isset($contactDetails['values'][$contactDetails['id']]['custom_896'])) {
            if (!empty($contactDetails['values'][$contactDetails['id']]['custom_896'])) {
              $title .= ' <img src="'. file_create_url($modulePath . '/img/icon_accepting_24px.png') . '" title="' . E::ts('Accepting new clients') . '">';
            }
            else {
              $title .= ' <img src="'. file_create_url($modulePath . '/img/icon_not_accepting_24px.png') . '" title="' . E::ts('Not accepting new clients') . '">';
            }
          }
        }
      }
      $variables['output'] = \Drupal\Core\Render\Markup::create($title);
    }
    if ($field->field == 'custom_911' || $field->field === 'custom_895') {
      if (!empty($variables['output']) && strpos($variables['output'], 'None of the above') === FALSE) {
        $parts = explode(',', $variables['output']);
        foreach ($parts as &$p) {
          $p = ' <img src="'. file_create_url($modulePath . '/img/icon_verified_16px.svg') . '" title="' . E::ts('Verified listing') .  '"> ' . $p;
        }
        $variables['output'] = implode(',', $parts);
      }
      if ($field->field === 'custom_895') {
        $serviceProviderEventses = \CRM_Core_DAO::executeQuery("SELECT a.id as `id`, a.camp_session_name_858 as `Camp_Session_Name`, a.from_859 as `From`, a.to_860 as `To`, a.entity_id as `entity_id`
          FROM civicrm_value_service_listi_72 a
          WHERE (`a`.`entity_id` = %1)", [1 => [$view->args[0], 'Positive']])->fetchAll();
        if (!empty($serviceProviderEventses)) {
          $variables['output'] .= '</span></div><div class="views-field views-field-event-camp"><h4>Camp Sessions</h4>';
          foreach ($serviceProviderEventses as $event) {
            $variables['output'] .= '<div class="views-field">' . $event['Camp_Session_Name'] . '<br>' . getCampDates($event['From'], $event['To']) . '</div>';
          }
          $variables['output'] .= '</div>';
        }
      }
      $variables['output'] = \Drupal\Core\Render\Markup::create($variables['output']);
    }
    if ($field->field == 'custom_905') {
      $content = $variables['output'];
      $stateProvinceAbbreviations = \civicrm_api3('Address', 'getoptions', ['field' => 'state_province_id', 'context' => 'abbreviate'])['values'];
      $addresses = \civicrm_api3('Address', 'get', ['contact_id' => $view->args[0], 'options' => ['sort' => 'is_primary desc'], 'sequential' => 1]);
      $phones = \civicrm_api3('Phone', 'get', ['contact_id' => $view->args[0], 'options' => ['sort' => 'is_primary desc'], 'sequential' => 1]);
      if (!empty($addresses['values'])) {
        foreach ($addresses['values'] as $key => $details) {
          if ($key === 0) {
            $keyPlaceholder = \Drupal::config('geolocation_google_maps.settings')->get('google_map_api_key');
            $content .= '</span></div><script async defer src="https://maps.googleapis.com/maps/api/js?key=' . $keyPlaceholder . '"></script>';
          }
          $content .= '<div class="views-field views-field-address-details"><div class="left column" style="float:left; margin-right:20px; min-width: 210px;">';
          if ($key === 0) {
            if (\Drupal::languageManager()->getCurrentLanguage()->getId() == 'fr') {
              $content .= 'Lieu de travail principal';
            }
            else {
              $content .= 'Primary Work Location';
            }
          }
          else {
            if (\Drupal::languageManager()->getCurrentLanguage()->getId() == 'fr') {
              $content .= 'Lieu de travail compl√©mentaire ' . $key;
            }
            else {
              $content .= 'Supplementary Work Location ' . $key;
            }
          }
          if (!empty($details['geo_code_1']) && !empty($details['geo_code_2'])) {
            $html = '<div id="address-map-%key%" data-lat="%lat%" data-lng="%long%" style="height: 100px; widgth: 100%;" data-maker-title="%street_address%"></div>';
            $html = str_replace('%key%', $key + 1, $html);
            $html = str_replace('%lat%', $details['geo_code_1'], $html);
            $html = str_replace('%long%', $details['geo_code_2'], $html);
            $html = str_replace('%street_address%', '<br>' . $details['street_address'] . '<br>' . $details['city'] . ', ' . $stateProvinceAbbreviations[$details['state_province_id']], $html);
            $content .= "<br /><br />" . $html;
          }

          $content .= '</div><div class="right column" style="min-height: 10em"><a href="tel:' . $phones['values'][$key]['phone'] . '">' . $phones['values'][$key]['phone'] . '</a>';
          $content .= '<br>' . $details['street_address'] . '<br>' . $details['city'] . ', ' . $stateProvinceAbbreviations[$details['state_province_id']];
          $content .= '<br>' . $details['postal_code'];
          $content .= '</div></div>';
        }
      }
      $variables['output'] = \Drupal\Core\Render\Markup::create(substr($content, 0, -6));
    }
  }
}

function jma_customizations_preprocess_field(&$variables) {
  if ($variables['entity_type'] == 'civicrm_contact' && $variables['field_name'] == 'organization_name') {
    $id = $variables['element']['#object']->id();
    $contactDetails = \civicrm_api3('Contact', 'get', ['id' => $id, 'return' => ['custom_897', 'custom_896', 'custom_911', 'custom_895']]);
    $modulePath = \Drupal::moduleHandler()->getModule('jma_customizations')->getPath();
    if ($variables['element']['#view_mode'] === 'search_teaser') {
      $size = '16px';
    }
    else {
      $size = '24px';
    }
    $variables['items'][0]['content']['#value'] = str_replace('Self-employed ', '', $variables['items'][0]['content']['#value']);
    if (\Drupal::languageManager()->getCurrentLanguage()->getId() == 'fr') {
      $variables['items'][0]['content']['#value'] = str_replace('/civicrm-contact', '/fr/civicrm-contact', $variables['items'][0]['content']['#value']);
    }
    if (!empty($contactDetails['values'])) {
      if (!empty($contactDetails['values'][$contactDetails['id']]['custom_897'])) {
        $servicesProvided = $contactDetails['values'][$contactDetails['id']]['custom_897'];
        if (in_array(3, $servicesProvided)) {
          $variables['items'][0]['content']['#value'] .= ' <img src="'. file_create_url($modulePath . '/img/icon_local_travel_' . $size . '.png') . '" title="' . E::ts('Travels to nearby areas') . '">';
        }
        if (in_array(4, $servicesProvided)) {
          $variables['items'][0]['content']['#value'] .= ' <img src="'. file_create_url($modulePath . '/img/icon_remote_travel_' . $size . '.png') . '" title="' . E::ts('Travels to remote areas') . '">';
        }
      }
      if (isset($contactDetails['values'][$contactDetails['id']]['custom_896'])) {
        if (!empty($contactDetails['values'][$contactDetails['id']]['custom_896'])) {
          $variables['items'][0]['content']['#value'] .= ' <img src="'. file_create_url($modulePath . '/img/icon_accepting_' . $size . '.png') . '" title="' . E::ts('Accepting new clients') . '">';
        }
        else {
          $variables['items'][0]['content']['#value'] .= ' <img src="'. file_create_url($modulePath . '/img/icon_not_accepting_' . $size . '.png') . '" title="' . E::ts('Not accepting new clients') . '">';
        }
      }
      if ($size === '16px' && ((!empty($contactDetails['values'][$contactDetails['id']]['custom_911']) && !in_array('None', $contactDetails['values'][$contactDetails['id']]['custom_911']))
        || !empty($contactDetails['values'][$contactDetails['id']]['custom_895']))) {
        $variables['items'][0]['content']['#value'] = '<img src="'. file_create_url($modulePath . '/img/icon_verified_24px.svg') . '" title="' . E::ts('Verified listing') . '"> ' . $variables['items'][0]['content']['#value'];
      }
    }
  }
}

function jma_customizations_views_query_alter(ViewExecutable $view, QueryPluginBase $query) {
  if ($view->id() == 'events') {
    // Traverse through the 'where' part of the query.
    foreach ($query->where as &$condition_group) {
      foreach ($condition_group['conditions'] as &$condition) {
        // If this is the part of the query filtering on title, chang the
        // condition to filter on node ID.
        if ($condition['field'] == 'civicrm_event.title') {
          $condition['field'] = 'civicrm_event.title_en_US';
        }
        if ($condition['field'] == 'civicrm_event.description') {
          $condition['field'] = 'civicrm_event.description_en_US';
        }
        if ($condition['field'] == 'civicrm_value_event_chapter_28_civicrm_event.chapter_325') {
          $condition['value'][0] = "([[:cntrl:]]|^)" . $condition['value'][0] . "([[:cntrl:]]|$)";
          $condition['operator'] = 'REGEXP';
        }
      }
    }
  }
}

function jma_customizations_module_implements_alter(&$implementations, $hook) {
  if ($hook == 'page_attachments' || $hook == 'page_attachments_alter') {

    // Move my_module_form_alter() to the end of the list.
    // \Drupal::moduleHandler()->getImplementations()
    // iterates through $implementations with a foreach loop which PHP iterates
    // in the order that the items were added, so to move an item to the end of
    // the array, we remove it and then add it.
    $group = $implementations['jma_customizations'];
    unset($implementations['jma_customizations']);
    $implementations['jma_customizations'] = $group;
  }
}

function jma_customizations_page_attachments(array &$page) {
    $uri = \Drupal\Core\Url::fromRoute('<current>');
    $current_uri = $uri->getInternalPath();
    $paths = [
        "civicrm/event/register",
        "civicrm/event/info",
    ];
    if (strpos($current_uri, 'civicrm') !== false && in_array($current_uri, $paths)) {
      $eventId = \Drupal::request()->query->get('id');
      if (!$eventId) {
        return;
      }
      $event = civicrm_api3('Event', 'get', ['id' => $eventId, 'return' => ["title", "summary", EVENT_IMAGE]])['values'];
      $ogTitle = array(
        '#tag' => 'meta',
        '#attributes' => array(
          'property' => 'og:title',
          'name' => 'title',
          'content' => $event[$eventId]['title'],
        ),
      );

      $page['#attached']['html_head'][] = [$ogTitle, 'ogTitle'];

      if (!empty($event[$eventId]['summary'])) {
        $ogDescription = array(
          '#tag' => 'meta',
          '#attributes' => array(
            'property' => 'og:description',
            'name' => 'description',
            'content' => $event[$eventId]['summary'],
          ),
        );

        $page['#attached']['html_head'][] = [$ogDescription, 'ogDescription'];
      }

      $ogUrl = array(
        '#tag' => 'meta',
        '#attributes' => array(
          'property' => 'og:url',
          'name' => 'canonical_url',
          'content' => \Drupal::request()->getSchemeAndHttpHost() . \Drupal::request()->getRequestUri(),
        ),
      );

      $page['#attached']['html_head'][] = [$ogUrl, 'ogUrl'];

      if (!empty($event[$eventId][EVENT_IMAGE])) {
        // Fetch the image from database.
        $imageUri = CRM_Core_DAO::singleValueQuery("SELECT uri FROM civicrm_file WHERE id = %1", [1 => [$event[$eventId][EVENT_IMAGE], 'Integer']]);
        $ogImage = array(
          '#tag' => 'meta',
          '#attributes' => array(
            'property' => 'og:image',
            'name' => 'image',
            'content' => \Drupal::request()->getSchemeAndHttpHost() . '/sites/default/files/civicrm/custom/' . $imageUri,
          ),
        );

        $page['#attached']['html_head'][] = [$ogImage, 'ogImage'];
      }

      $ogType = array(
        '#tag' => 'meta',
        '#attributes' => array(
          'property' => 'og:type',
          'name' => 'type',
          'content' => 'article',
        ),
      );

     $page['#attached']['html_head'][] = [$ogType, 'ogType'];
  }
  if (strpos($current_uri, 'service-listing') !== FALSE && strpos($current_uri, 'service-listing-application') === FALSE && strpos($current_uri, 'service-listing-thankyou') === FALSE) {
    $parts = explode('/', $current_uri);
    \Drupal::service('civicrm')->initialize();
    $contactDetails = \civicrm_api3('Contact', 'get', ['id' => $parts[1]]);
    if (!empty($contactDetails['values'])) {
      $displayName = $contactDetails['values'][$contactDetails['id']]['display_name'];
      foreach ($page['#attached']['html_head'] as $key => $tagDetails) {
        if ($tagDetails[1] === 'title') {
          $content = str_replace('Self-employed ', '', $displayName) . ' ' . $tagDetails[0]['#attributes']['content'];
          $page['#attached']['html_head'][$key][0]['#attributes']['content'] = $content;
        }
      }
    }
  }
}

function jma_customizations_page_attachments_alter(array &$attachments) {
  $uri = \Drupal\Core\Url::fromRoute('<current>');
  $current_uri = $uri->getInternalPath();
  $paths = [
    "civicrm/event/register",
    "civicrm/event/info",
  ];
  if (strpos($current_uri, 'civicrm') !== false && in_array($current_uri, $paths)) {
    $invalidMetas = [
      'title',
      'description',
    ];
    foreach ($attachments['#attached']['html_head'] as $key => $attachment) {
      if (in_array($attachment[1], $invalidMetas)) {
        unset($attachments['#attached']['html_head'][$key]);
      }
    }
  }
}

function jma_customizations_preprocess_html(&$variables) {
  $variables['service_title'] = FALSE;
  $uri = \Drupal\Core\Url::fromRoute('<current>');
  $current_uri = $uri->getInternalPath();
  if (strpos($current_uri, 'service-listing') !== FALSE && strpos($current_uri, 'service-listing-application') === FALSE && strpos($current_uri, 'service-listing-thankyou') === FALSE) {
    $parts = explode('/', $current_uri);
    \Drupal::service('civicrm')->initialize();
    $contactDetails = \civicrm_api3('Contact', 'get', ['id' => $parts[1]]);
    if (!empty($contactDetails['values'])) {
      $variables['service_title'] = str_replace('Self-employed ', '', $contactDetails['values'][$contactDetails['id']]['display_name']) . ' ';
    }
  }
}

function jma_customizations_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  if ($form_id === "views_exposed_form" && $form['#id'] == "views-exposed-form-events-page-1") {
    $anyText = '- Any - ';
    if (\Drupal::languageManager()->getCurrentLanguage()->getId() == 'fr') {
      $anyText = '- Tous -';
    }
    $options = [
      'All' => $anyText,
    ];
    $eventTypes = CRM_Core_DAO::executeQuery("SELECT v.value, v.label AS label, v.name AS name
      FROM civicrm_event e
      INNER JOIN civicrm_option_value v ON v.value = e.event_type_id
      INNER JOIN civicrm_option_group g ON g.id = v.option_group_id
      WHERE e.is_active = 1 AND g.name = 'event_type' AND DATE_FORMAT(e.start_date, '%Y-%m-%d') >= CURRENT_DATE() GROUP BY v.value ORDER BY v.label")->fetchAll();
    foreach ($eventTypes as $eventType) {
      if ($eventType['name'] == "Fundraising with multi pax event") {
        $eventType['label'] = "Fundraiser";
      }
      $options[$eventType['value']] = $eventType['label'];
    }
    $form['event_type_id']['#options'] = $options;
  }
}

function jma_customizations_views_pre_render(ViewExecutable &$view) {
  if ($view->id() == 'event_map') {
    $view->element['#attached']['library'][] = 'jma_customizations/jma_customizations';
    $results = $view->result;
    // Find a better way to do this, for now, using a sample event.
    $event_ent = \Drupal::entityTypeManager()->getStorage('civicrm_event')->load(1327);
    foreach ($results as $i => &$row) {
      if (!empty($row->_entity)) {
        // Event is loaded here.
        // TODO: Derive the base URL
        $viewLink = "<a href='https://jma.staging.autismontario.com/civicrm/event/info?reset=1&id=" . $row->_entity->get('id')->value . "' target='_blank'>View event</a>";
        $row->_entity->set('id', $viewLink);
      }
      else {
        // Contact is loaded here.
        $contact_ent = \Drupal::entityTypeManager()->getStorage('civicrm_contact')->load($row->id);
        $row->_entity = $event_ent;
        $row->_entity->set('title', $contact_ent->get('display_name')->value);
        // TODO: Derive the base URL
        $viewLink = "<a href='https://jma.staging.autismontario.com/civicrm/contact/view?reset=1&cid=" . $row->id . "' target='_blank'>View service listing</a>";
        $row->_entity->set('id', $viewLink);
      }
    }
    $view->result = $results;
  }
  if ($view->id() == 'search_solr_' || $view->id() == 'service_listing') {
    $view->element['#attached']['library'][] = 'jma_customizations/jma_customizations';
    $view->element['#attached']['library'][] = 'jma_customizations/service_listing';
    $view->element['#attached']['library'][] = 'jma_customizations/search_facet';
  }
}

/**
 * Implements hook_views_pre_execute().
 */
function jma_customizations_views_pre_execute(ViewExecutable &$view) {
  if ($view->id() == 'event_map') {
    $view2 = Views::getView('contact_map');
    $view2->build('page_1');
    $other_query = $view2->build_info['query'];

    $other_query->addField('civicrm_contact__field_geolocation', 'field_geolocation_lat_sin', 'field_geolocation_lat_sin');
    $other_query->addField('civicrm_contact__field_geolocation', 'field_geolocation_lat_cos', 'field_geolocation_lat_cos');
    $other_query->addField('civicrm_contact__field_geolocation', 'field_geolocation_lng_rad', 'field_geolocation_lng_rad');

    $view->build_info['query']->addField('civicrm_event__field_geolocation', 'field_geolocation_lat_sin', 'field_geolocation_lat_sin');
    $view->build_info['query']->addField('civicrm_event__field_geolocation', 'field_geolocation_lat_cos', 'field_geolocation_lat_cos');
    $view->build_info['query']->addField('civicrm_event__field_geolocation', 'field_geolocation_lng_rad', 'field_geolocation_lng_rad');
    $view->build_info['query']->union($other_query);

    $query = db_select($view->build_info['query'], 'location')->fields('location');

    if (!empty($view->exposed_data['lat'])) {
      $lat = $view->exposed_data['lat'];
    }
    if (!empty($view->exposed_data['lng'])) {
      $lng = $view->exposed_data['lng'];
    }
    $distance = 16.09344; // 10 Km
    if (!empty($view->exposed_data['field_geolocation_proximity'])) {
      $distance = $view->exposed_data['field_geolocation_proximity'];
    }
    $query = db_select($view->build_info['query'], 'location')->fields('location');

    $view->build_info['query'] = $query;
    if (!empty($lat) && !empty($lng)) {
      $fragment = ProximityTrait::getProximityQueryFragment('location', 'field_geolocation', $lat, $lng);
      $fragment .= " <= :distance";
      $view->build_info['query']->where($fragment, [':distance' => $distance]);
    }
  }
}

function jma_customizations_user_login($account) {
  $current_route = \Drupal::routeMatch()->getRouteName();
  $destination = \Drupal::request()->query->get('destination');
  if ($destination && $destination != '/user/login') {
    return;
  }
  if (!in_array($current_route, ['user.reset', 'user.reset.login'])) {
    $current_user = \Drupal::currentUser();
    $roles = (array) $current_user->getRoles();
    if (in_array('authorized_contact', $roles)) {
      $response = new Symfony\Component\HttpFoundation\RedirectResponse(\Drupal\Core\URL::fromUserInput('/civicrm/service-listing-application')->toString());
      $response->send();
    }
  }
}

function jma_customizations_form_user_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  $current_user = \Drupal::currentUser();
  $roles = (array) $current_user->getRoles();
  if (in_array('authorized_contact', $roles)) {
    foreach (array_keys($form['actions']) as $action) {
      if (isset($form['actions'][$action]['#type']) && $form['actions'][$action]['#type'] === 'submit') {
        $form['actions'][$action]['#submit'][] = '_jma_redirect_form_submit';
      }
    }
  }
}

function _jma_redirect_form_submit(array $form, FormStateInterface $form_state){
  $response = new Symfony\Component\HttpFoundation\RedirectResponse(\Drupal\Core\URL::fromUserInput('/civicrm/service-listing-application')->toString());
  $response->send();
}

function getCampDates($from, $to) {
  $content = 'From: ' . date('l, F j Y', strtotime($from)) . ' To: ' . date('l, F j Y', strtotime($to));
  if (\Drupal::languageManager()->getCurrentLanguage()->getId() == 'fr') {
    $english_days = array('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday');
    $french_days = array('lundi', 'mardi', 'mercredi', 'jeudi', 'vendredi', 'samedi', 'dimanche');
    $english_months = array('January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December');
    $french_months = array('janvier', 'f√©vrier', 'mars', 'avril', 'mai', 'juin', 'juillet', 'ao√ªt', 'septembre', 'octobre', 'novembre', 'd√©cembre');
    $content = str_replace($english_months, $french_months, str_replace($english_days, $french_days, $content));
  }
  return $content;
}

function jma_customizations_views_data_alter(&$data) {
  /** @var \Drupal\search_api\IndexInterface $index */
  foreach (Index::loadMultiple() as $index) {
    $table = &$data['search_api_index_' . $index->id()];

    /** @var \Drupal\search_api\Item\FieldInterface $field */
    foreach ($index->getFields(TRUE) as $field_id => $field) {
      if ($field_id == 'custom_899') {
        $field_alias = _search_api_location_views_get_field_alias($field_id, $table);
        // Add boundary handlers.
        $table[$field_alias]['filter'] = [
          'id' => 'lang_views_filter',
          'allow empty' => TRUE,
          'real field' => $field_alias,
        ];
      }
    }
  }
}
