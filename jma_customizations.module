<?php
define('EVENT_IMAGE', 'custom_833');

require_once 'jma_customizations.secrets.inc';

use Drupal\Core\Language\LanguageInterface;
use Drupal\views\Plugin\views\cache\CachePluginBase;
use Drupal\views\Plugin\views\query\QueryPluginBase;
use Drupal\views\Plugin\views\PluginBase;
use Drupal\views\ViewExecutable;
use Drupal\Core\Form\FormStateInterface;
use Drupal\views\Views;


function jma_customizations_css_alter(&$css, \Drupal\Core\Asset\AttachedAssetsInterface $assets)
{
    $uri = \Drupal\Core\Url::fromRoute('<current>');
    $current_uri = $uri->getInternalPath();
//\Drupal::logger('jma_customization_path_debug')->info('DE: <pre>' . print_r($current_uri, TRUE) . '</pre>');
    $paths = [
        "civicrm/contribute/transact",
        "civicrm/event/register",
        "civicrm/event/info",
        "civicrm-event",
        "civicrm/profile/view",
        "civicrm/profile/edit",
        "civicrm/profile/create",
        "civicrm/contact/map",
        "webform/civicrm_contact",
        "webform/civicrm_contact/confirmation",
        "civicrm/user",
        "civicrm/feedback",
        "civicrm/service-listing-application",
        "civicrm/service-listing-application-confirm",
        "civicrm/service-listing-thankyou",
    ];
    if (strpos($current_uri, 'civicrm') !== false && !in_array($current_uri, $paths)) {
        unset($css['themes/contrib/adminimal_theme/css/adminimal.css']);
        unset($css['themes/custom/de_theme/dist/css/de_theme.css']);
        unset($css['modules/contrib/adminimal_admin_toolbar/css/adminimal_admin_toolbar.css']);
    }
}

function jma_customizations_preprocess_views_view_field(&$variables) {
  $view = $variables['view'];
  $field = $variables['field'];
  $modulePath = \Drupal::moduleHandler()->getModule('jma_customizations')->getPath();
  if ($view->storage->id() == 'service_listing') {
    if ($field->field == 'display_name') {
      $variables['output'] = \Drupal\Core\Render\Markup::create(str_replace('Self-employed ', '', $variables['output']));
    }
    if ($field->field == 'contact_sub_type') {
      $title = $variables['output'];
      if (!empty($view->args[0])) {
        $contactDetails = \civicrm_api3('Contact', 'get', ['id' => $view->args[0], 'return' => ['custom_897', 'custom_896', 'custom_911', 'custom_895']]);
        if (!empty($contactDetails['values'])) {
          if (!empty($contactDetails['values'][$contactDetails['id']]['custom_897'])) {
            $servicesProvided = $contactDetails['values'][$contactDetails['id']]['custom_897'];
            if (in_array(3, $servicesProvided)) {
              $title .= ' <img src="'. file_create_url($modulePath . '/img/icon_local_travel_24px.png') . '" title="Travels to nearby areas">';
            }
            if (in_array(4, $servicesProvided)) {
              $title .= ' <img src="'. file_create_url($modulePath . '/img/icon_remote_travel_24px.png') . '" title="Travels to remote areas">';
            }
          }
          if (isset($contactDetails['values'][$contactDetails['id']]['custom_896'])) {
            if (!empty($contactDetails['values'][$contactDetails['id']]['custom_896'])) {
              $title .= ' <img src="'. file_create_url($modulePath . '/img/icon_accepting_24px.png') . '" title="Accepting new clients">';
            }
            else {
              $title .= ' <img src="'. file_create_url($modulePath . '/img/icon_not_accepting_24px.png') . '" title="Not accepting new clients">';
            }
          }
          if ((!empty($contactDetails['values'][$contactDetails['id']]['custom_911']) && !in_array('None', $contactDetails['values'][$contactDetails['id']]['custom_911'])) || 
            !empty($contactDetails['values'][$contactDetails['id']]['custom_895'])) {
            $title .= ' <img src="'. file_create_url($modulePath . '/img/icon_verified_24px.svg') . '" title="Verified provider">';
          }
        }
      }
      $variables['output'] = \Drupal\Core\Render\Markup::create($title);
    }
    if ($field->field == 'custom_911' || $field->field === 'custom_895') {
      if (!empty($variables['output']) && strpos($variables['output'], 'None of the above') === FALSE) {
        $parts = explode(',', $variables['output']);
        foreach ($parts as &$p) {
          $p = ' <img src="'. file_create_url($modulePath . '/img/icon_verified_16px.svg') . '" title="Verified provider"> ' . $p;
        }
        $variables['output'] = implode(',', $parts);
      }
      if ($field->field === 'custom_895') {
        $serviceProviderEventses = \CRM_Core_DAO::executeQuery("SELECT a.id as `id`, a.camp_session_name_858 as `Camp_Session_Name`, a.from_859 as `From`, a.to_860 as `To`, a.entity_id as `entity_id`
          FROM civicrm_value_service_listi_72 a
          WHERE (`a`.`entity_id` = %1)", [1 => [$view->args[0], 'Positive']])->fetchAll();
        if (!empty($serviceProviderEventses)) {
          $variables['output'] .= '</span></div><div class="views-field views-field-event-camp"><h4>Camp Sessions</h4>';
          foreach ($serviceProviderEventses as $event) {
            $variables['output'] .= '<div class="views-field">' . $event['Camp_Session_Name'] . '<br>' . getCampDates($event['From'], $event['To']) . '</div>';
          }
          $variables['output'] .= '</div>';
        }
      }
      $variables['output'] = \Drupal\Core\Render\Markup::create($variables['output']);
    }
    if ($field->field == 'custom_899') {
      $content = $variables['output'];
      $stateProvinceAbbreviations = \civicrm_api3('Address', 'getoptions', ['field' => 'state_province_id', 'context' => 'abbreviate'])['values'];
      $addresses = \civicrm_api3('Address', 'get', ['contact_id' => $view->args[0], 'options' => ['sort' => 'is_primary desc'], 'sequential' => 1]);
      $phones = \civicrm_api3('Phone', 'get', ['contact_id' => $view->args[0], 'options' => ['sort' => 'is_primary desc'], 'sequential' => 1]);
      if (!empty($addresses['values'])) {
        foreach ($addresses['values'] as $key => $details) {
          if ($key === 0) {
            $content .= '</span></div><div id="other-languages"></div>';
          }
          $content .= '<div class="views-field views-field-address-details"><div class="left column" style="float:left; margin-right:20px; min-width: 210px;">';
          if ($key === 0) {
            if (\Drupal::languageManager()->getCurrentLanguage()->getId() == 'fr') {
              $content .= 'Lieu de travail principal';
            }
            else {
              $content .= 'Primary Work Location';
            }
          }
          else {
            if (\Drupal::languageManager()->getCurrentLanguage()->getId() == 'fr') {
              $content .= 'Lieu de travail compl√©mentaire ' . $key;
            }
            else {
              $content .= 'Supplementary Work Location ' . $key;
            }
          }
          if (!empty($details['geo_code_1']) && !empty($details['geo_code_2'])) {
            $html = '<div class="geolocation-map-wrapper" id="map-5eaf8e2e7b141" data-map-type="google_maps">
                <div class="geolocation-map-controls">
                      </div>

                <div class="geolocation-map-container js-show" style="height: 100px; width: 100%; position: relative; overflow: hidden;"><div style="height: 100%; width: 100%; position: absolute; top: 0px; left: 0px; background-color: rgb(229, 227, 223);"><div class="gm-style" style="position: absolute; z-index: 0; left: 0px; top: 0px; height: 100%; width: 100%; padding: 0px; border-width: 0px; margin: 0px;"><div tabindex="0" style="position: absolute; z-index: 0; left: 0px; top: 0px; height: 100%; width: 100%; padding: 0px; border-width: 0px; margin: 0px; cursor: url(&quot;https://maps.gstatic.com/mapfiles/openhand_8_8.cur&quot;), default; touch-action: pan-x pan-y;"><div style="z-index: 1; position: absolute; left: 50%; top: 50%; width: 100%; transform: translate(0px, 0px);"><div style="position: absolute; left: 0px; top: 0px; z-index: 100; width: 100%;"><div style="position: absolute; left: 0px; top: 0px; z-index: 0;"><div style="position: absolute; z-index: 992; transform: matrix(1, 0, 0, 1, -144, -112);"><div style="position: absolute; left: 0px; top: 0px; width: 256px; height: 256px;"><div style="width: 256px; height: 256px;"></div></div><div style="position: absolute; left: -256px; top: 0px; width: 256px; height: 256px;"><div style="width: 256px; height: 256px;"></div></div><div style="position: absolute; left: 256px; top: 0px; width: 256px; height: 256px;"><div style="width: 256px; height: 256px;"></div></div></div></div></div><div style="position: absolute; left: 0px; top: 0px; z-index: 101; width: 100%;"></div><div style="position: absolute; left: 0px; top: 0px; z-index: 102; width: 100%;"></div><div style="position: absolute; left: 0px; top: 0px; z-index: 103; width: 100%;"><div style="position: absolute; left: 0px; top: 0px; z-index: -1;"><div style="position: absolute; z-index: 992; transform: matrix(1, 0, 0, 1, -144, -112);"><div style="width: 256px; height: 256px; overflow: hidden; position: absolute; left: 0px; top: 0px;"></div><div style="width: 256px; height: 256px; overflow: hidden; position: absolute; left: -256px; top: 0px;"></div><div style="width: 256px; height: 256px; overflow: hidden; position: absolute; left: 256px; top: 0px;"></div></div></div><div style="width: 27px; height: 43px; overflow: hidden; position: absolute; left: -14px; top: -43px; z-index: 0;"><img alt="" src="https://maps.gstatic.com/mapfiles/api-3/images/spotlight-poi2_hdpi.png" draggable="false" style="position: absolute; left: 0px; top: 0px; width: 27px; height: 43px; user-select: none; border: 0px; padding: 0px; margin: 0px; max-width: none;"></div></div><div style="position: absolute; left: 0px; top: 0px; z-index: 0;"><div style="position: absolute; z-index: 992; transform: matrix(1, 0, 0, 1, -144, -112);"><div style="position: absolute; left: 0px; top: 0px; width: 256px; height: 256px; transition: opacity 200ms linear 0s;"><img draggable="false" alt="" role="presentation" src="https://maps.googleapis.com/maps/vt?pb=!1m5!1m4!1i8!2i71!3i93!4i256!2m3!1e0!2sm!3i512225897!3m12!2sen-US!3sUS!5e18!12m4!1e68!2m2!1sset!2sRoadmap!12m3!1e37!2m1!1ssmartmaps!4e0!5m1!5f2&amp;key=' . GOOGLE_API_KEY . '&amp;token=99229" style="width: 256px; height: 256px; user-select: none; border: 0px; padding: 0px; margin: 0px; max-width: none;"></div><div style="position: absolute; left: -256px; top: 0px; width: 256px; height: 256px; transition: opacity 200ms linear 0s;"><img draggable="false" alt="" role="presentation" src="https://maps.googleapis.com/maps/vt?pb=!1m5!1m4!1i8!2i70!3i93!4i256!2m3!1e0!2sm!3i512225897!3m12!2sen-US!3sUS!5e18!12m4!1e68!2m2!1sset!2sRoadmap!12m3!1e37!2m1!1ssmartmaps!4e0!5m1!5f2&amp;key=' . GOOGLE_API_KEY . '&amp;token=44922" style="width: 256px; height: 256px; user-select: none; border: 0px; padding: 0px; margin: 0px; max-width: none;"></div><div style="position: absolute; left: 256px; top: 0px; width: 256px; height: 256px; transition: opacity 200ms linear 0s;"><img draggable="false" alt="" role="presentation" src="https://maps.googleapis.com/maps/vt?pb=!1m5!1m4!1i8!2i72!3i93!4i256!2m3!1e0!2sm!3i512225788!3m12!2sen-US!3sUS!5e18!12m4!1e68!2m2!1sset!2sRoadmap!12m3!1e37!2m1!1ssmartmaps!4e0!5m1!5f2&amp;key=' . GOOGLE_API_KEY . '&amp;token=19839" style="width: 256px; height: 256px; user-select: none; border: 0px; padding: 0px; margin: 0px; max-width: none;"></div></div></div></div><div class="gm-style-pbc" style="z-index: 2; position: absolute; height: 100%; width: 100%; padding: 0px; border-width: 0px; margin: 0px; left: 0px; top: 0px; opacity: 0;"><p class="gm-style-pbt"></p></div><div style="z-index: 3; position: absolute; height: 100%; width: 100%; padding: 0px; border-width: 0px; margin: 0px; left: 0px; top: 0px; touch-action: pan-x pan-y;"><div style="z-index: 4; position: absolute; left: 50%; top: 50%; width: 100%; transform: translate(0px, 0px);"><div style="position: absolute; left: 0px; top: 0px; z-index: 104; width: 100%;"></div><div style="position: absolute; left: 0px; top: 0px; z-index: 105; width: 100%;"></div><div style="position: absolute; left: 0px; top: 0px; z-index: 106; width: 100%;"><div style="width: 27px; height: 43px; overflow: hidden; position: absolute; opacity: 0; left: -14px; top: -43px; z-index: 0;"><img alt="" src="https://maps.gstatic.com/mapfiles/api-3/images/spotlight-poi2_hdpi.png" draggable="false" usemap="#gmimap83" style="position: absolute; left: 0px; top: 0px; width: 27px; height: 43px; user-select: none; border: 0px; padding: 0px; margin: 0px; max-width: none;"><map name="gmimap83" id="gmimap83"><area log="miw" coords="13.5,0,4,3.75,0,13.5,13.5,43,27,13.5,23,3.75" shape="poly" title="George Brown College" style="cursor: pointer; touch-action: none;"></map></div></div><div style="position: absolute; left: 0px; top: 0px; z-index: 107; width: 100%;"></div></div></div></div><iframe aria-hidden="true" frameborder="0" tabindex="-1" style="z-index: -1; position: absolute; width: 100%; height: 100%; top: 0px; left: 0px; border: none;"></iframe><div style="margin-left: 5px; margin-right: 5px; z-index: 1000000; position: absolute; left: 0px; bottom: 0px;"><a target="_blank" rel="noopener" href="https://maps.google.com/maps?ll=43.643963,-79.365475&amp;z=8&amp;t=m&amp;hl=en-US&amp;gl=US&amp;mapclient=apiv3" title="Open this area in Google Maps (opens a new window)" style="position: static; overflow: visible; float: none; display: inline;"><div style="width: 66px; height: 26px; cursor: pointer;"><img alt="" src="https://maps.gstatic.com/mapfiles/api-3/images/google4_hdpi.png" draggable="false" style="position: absolute; left: 0px; top: 0px; width: 66px; height: 26px; user-select: none; border: 0px; padding: 0px; margin: 0px;"></div></a></div><div style="background-color: white; padding: 15px 21px; border: 1px solid rgb(171, 171, 171); font-family: Roboto, Arial, sans-serif; color: rgb(34, 34, 34); box-sizing: border-box; box-shadow: rgba(0, 0, 0, 0.2) 0px 4px 16px; z-index: 10000002; display: none; width: 300px; height: 91px; position: absolute; left: 10px; top: 5px;"><div style="padding: 0px 0px 10px; font-size: 16px; box-sizing: border-box;">Map Data</div><div style="font-size: 13px;">Map data ¬©2020 Google</div><button draggable="false" title="Close" aria-label="Close" type="button" class="gm-ui-hover-effect" style="background: none; display: block; border: 0px; margin: 0px; padding: 0px; position: absolute; cursor: pointer; user-select: none; top: 0px; right: 0px; width: 37px; height: 37px;"><img src="data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2224px%22%20height%3D%2224px%22%20viewBox%3D%220%200%2024%2024%22%20fill%3D%22%23000000%22%3E%0A%20%20%20%20%3Cpath%20d%3D%22M19%206.41L17.59%205%2012%2010.59%206.41%205%205%206.41%2010.59%2012%205%2017.59%206.41%2019%2012%2013.41%2017.59%2019%2019%2017.59%2013.41%2012z%22%2F%3E%0A%20%20%20%20%3Cpath%20d%3D%22M0%200h24v24H0z%22%20fill%3D%22none%22%2F%3E%0A%3C%2Fsvg%3E%0A" style="pointer-events: none; display: block; width: 13px; height: 13px; margin: 12px;"></button></div><div class="gmnoprint" style="z-index: 1000001; position: absolute; right: 170px; bottom: 0px; width: 122px;"><div draggable="false" class="gm-style-cc" style="user-select: none; height: 14px; line-height: 14px;"><div style="opacity: 0.7; width: 100%; height: 100%; position: absolute;"><div style="width: 1px;"></div><div style="background-color: rgb(245, 245, 245); width: auto; height: 100%; margin-left: 1px;"></div></div><div style="position: relative; padding-right: 6px; padding-left: 6px; box-sizing: border-box; font-family: Roboto, Arial, sans-serif; font-size: 10px; color: rgb(68, 68, 68); white-space: nowrap; direction: ltr; text-align: right; vertical-align: middle; display: inline-block;"><a style="text-decoration: none; cursor: pointer; display: none;">Map Data</a><span>Map data ¬©2020 Google</span></div></div></div><div class="gmnoscreen" style="position: absolute; right: 0px; bottom: 0px;"><div style="font-family: Roboto, Arial, sans-serif; font-size: 11px; color: rgb(68, 68, 68); direction: ltr; text-align: right; background-color: rgb(245, 245, 245);">Map data ¬©2020 Google</div></div><div class="gmnoprint gm-style-cc" draggable="false" style="z-index: 1000001; user-select: none; height: 14px; line-height: 14px; position: absolute; right: 98px; bottom: 0px;"><div style="opacity: 0.7; width: 100%; height: 100%; position: absolute;"><div style="width: 1px;"></div><div style="background-color: rgb(245, 245, 245); width: auto; height: 100%; margin-left: 1px;"></div></div><div style="position: relative; padding-right: 6px; padding-left: 6px; box-sizing: border-box; font-family: Roboto, Arial, sans-serif; font-size: 10px; color: rgb(68, 68, 68); white-space: nowrap; direction: ltr; text-align: right; vertical-align: middle; display: inline-block;"><a href="https://www.google.com/intl/en-US_US/help/terms_maps.html" target="_blank" rel="noopener" style="text-decoration: none; cursor: pointer; color: rgb(68, 68, 68);">Terms of Use</a></div></div><button draggable="false" title="Toggle fullscreen view" aria-label="Toggle fullscreen view" type="button" class="gm-control-active gm-fullscreen-control" style="background: none rgb(255, 255, 255); border: 0px; margin: 10px; padding: 0px; position: absolute; cursor: pointer; user-select: none; border-radius: 2px; height: 40px; width: 40px; box-shadow: rgba(0, 0, 0, 0.3) 0px 1px 4px -1px; overflow: hidden; display: none; top: 0px; right: 0px;"><img src="data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2218%22%20height%3D%2218%22%20viewBox%3D%220%20018%2018%22%3E%0A%20%20%3Cpath%20fill%3D%22%23666%22%20d%3D%22M0%2C0v2v4h2V2h4V0H2H0z%20M16%2C0h-4v2h4v4h2V2V0H16z%20M16%2C16h-4v2h4h2v-2v-4h-2V16z%20M2%2C12H0v4v2h2h4v-2H2V12z%22%2F%3E%0A%3C%2Fsvg%3E%0A" style="height: 18px; width: 18px;"><img src="data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2218%22%20height%3D%2218%22%20viewBox%3D%220%200%2018%2018%22%3E%0A%20%20%3Cpath%20fill%3D%22%23333%22%20d%3D%22M0%2C0v2v4h2V2h4V0H2H0z%20M16%2C0h-4v2h4v4h2V2V0H16z%20M16%2C16h-4v2h4h2v-2v-4h-2V16z%20M2%2C12H0v4v2h2h4v-2H2V12z%22%2F%3E%0A%3C%2Fsvg%3E%0A" style="height: 18px; width: 18px;"><img src="data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2218%22%20height%3D%2218%22%20viewBox%3D%220%200%2018%2018%22%3E%0A%20%20%3Cpath%20fill%3D%22%23111%22%20d%3D%22M0%2C0v2v4h2V2h4V0H2H0z%20M16%2C0h-4v2h4v4h2V2V0H16z%20M16%2C16h-4v2h4h2v-2v-4h-2V16z%20M2%2C12H0v4v2h2h4v-2H2V12z%22%2F%3E%0A%3C%2Fsvg%3E%0A" style="height: 18px; width: 18px;"></button><div draggable="false" class="gm-style-cc" style="user-select: none; height: 14px; line-height: 14px; position: absolute; right: 0px; bottom: 0px;"><div style="opacity: 0.7; width: 100%; height: 100%; position: absolute;"><div style="width: 1px;"></div><div style="background-color: rgb(245, 245, 245); width: auto; height: 100%; margin-left: 1px;"></div></div><div style="position: relative; padding-right: 6px; padding-left: 6px; box-sizing: border-box; font-family: Roboto, Arial, sans-serif; font-size: 10px; color: rgb(68, 68, 68); white-space: nowrap; direction: ltr; text-align: right; vertical-align: middle; display: inline-block;"><a target="_blank" rel="noopener" title="Report errors in the road map or imagery to Google" href="https://www.google.com/maps/@%lat%,%long%,8z/data=!10m1!1e1!12b1?source=apiv3&amp;rapsrc=apiv3" style="font-family: Roboto, Arial, sans-serif; font-size: 10px; color: rgb(68, 68, 68); text-decoration: none; position: relative;">Report a map error</a></div></div></div></div></div>


            <div class="geolocation-location js-hide" id="5eaf8e2e84a68" data-lat="%lat%" data-lng="%long%" data-set-marker="true" typeof="Place" style="display: none;">
              <span property="geo" typeof="GeoCoordinates">
                <meta property="latitude" content="%lat%">
                <meta property="longitude" content="%long%">
              </span>

                  <h2 class="location-title" property="name">%street_address%</h2>

              </div>
             </div>';
            $html = str_replace('%lat%', $details['geo_code_1'], $html);
            $html = str_replace('%long%', $details['geo_code_2'], $html);
            $html = str_replace('%street_address%', '<br>' . $details['street_address'] . '<br>' . $details['city'] . ', ' . $stateProvinceAbbreviations[$details['state_province_id']], $html);
            $content .= "<br /><br />" . $html;
          }
 

          $content .= '</div><div class="right column" style="min-height: 10em"><a href="tel:' . $phones['values'][$key]['phone'] . '">' . $phones['values'][$key]['phone'] . '</a>';
          $content .= '<br>' . $details['street_address'] . '<br>' . $details['city'] . ', ' . $stateProvinceAbbreviations[$details['state_province_id']];
          $content .= '<br>' . $details['postal_code'];
          $content .= '</div></div>';
        }
      }
      $variables['output'] = \Drupal\Core\Render\Markup::create(substr($content, 0, -6));
    }
  }
}

function jma_customizations_preprocess_field(&$variables) {
  if ($variables['entity_type'] == 'civicrm_contact' && $variables['field_name'] == 'organization_name') {
    $id = $variables['element']['#object']->id();
    $contactDetails = \civicrm_api3('Contact', 'get', ['id' => $id, 'return' => ['custom_897', 'custom_896']]);
    $modulePath = \Drupal::moduleHandler()->getModule('jma_customizations')->getPath();
    if ($variables['element']['#view_mode'] === 'search_teaser') {
      $size = '16px';
    }
    else {
      $size = '24px';
    }
    $variables['items'][0]['content']['#value'] = str_replace('Self-employed ', '', $variables['items'][0]['content']['#value']);
    if (!empty($contactDetails['values'])) {
      if (!empty($contactDetails['values'][$contactDetails['id']]['custom_897'])) {
        $servicesProvided = $contactDetails['values'][$contactDetails['id']]['custom_897'];
        if (in_array(3, $servicesProvided)) {
          $variables['items'][0]['content']['#value'] .= ' <img src="'. file_create_url($modulePath . '/img/icon_local_travel_' . $size . '.png') . '" title="Travels to nearby areas">';
        }
        if (in_array(4, $servicesProvided)) {
          $variables['items'][0]['content']['#value'] .= ' <img src="'. file_create_url($modulePath . '/img/icon_remote_travel_' . $size . '.png') . '" title="Travels to remote areas">';
        }
      }
      if (isset($contactDetails['values'][$contactDetails['id']]['custom_896'])) {
        if (!empty($contactDetails['values'][$contactDetails['id']]['custom_896'])) {
          $variables['items'][0]['content']['#value'] .= ' <img src="'. file_create_url($modulePath . '/img/icon_accepting_' . $size . '.png') . '" title="Accepting new clients">';
        }
        else {
          $variables['items'][0]['content']['#value'] .= ' <img src="'. file_create_url($modulePath . '/img/icon_not_accepting_' . $size . '.png') . '" title="Not accepting new clients">';
        }
      }
      if ($size === '16px') {
        $variables['items'][0]['content']['#value'] .= ' <img src="'. file_create_url($modulePath . '/img/icon_verified_16px.svg') . '" title="Verified provider">';
      }
    }
  }
}

function jma_customizations_views_query_alter(ViewExecutable $view, QueryPluginBase $query) {
  if ($view->id() == 'events') {
    // Traverse through the 'where' part of the query.
    foreach ($query->where as &$condition_group) {
      foreach ($condition_group['conditions'] as &$condition) {
        // If this is the part of the query filtering on title, chang the
        // condition to filter on node ID.
        if ($condition['field'] == 'civicrm_event.title') {
          $condition['field'] = 'civicrm_event.title_en_US';
        }
        if ($condition['field'] == 'civicrm_event.description') {
          $condition['field'] = 'civicrm_event.description_en_US';
        }
        if ($condition['field'] == 'civicrm_value_event_chapter_28_civicrm_event.chapter_325') {
          $condition['value'][0] = "([[:cntrl:]]|^)" . $condition['value'][0] . "([[:cntrl:]]|$)";
          $condition['operator'] = 'REGEXP';
        }
      }
    }
  }
}

function jma_customizations_module_implements_alter(&$implementations, $hook) {
  if ($hook == 'page_attachments' || $hook == 'page_attachments_alter') {

    // Move my_module_form_alter() to the end of the list.
    // \Drupal::moduleHandler()->getImplementations()
    // iterates through $implementations with a foreach loop which PHP iterates
    // in the order that the items were added, so to move an item to the end of
    // the array, we remove it and then add it.
    $group = $implementations['jma_customizations'];
    unset($implementations['jma_customizations']);
    $implementations['jma_customizations'] = $group;
  }
}

function jma_customizations_page_attachments(array &$page) {
    $uri = \Drupal\Core\Url::fromRoute('<current>');
    $current_uri = $uri->getInternalPath();
    $paths = [
        "civicrm/event/register",
        "civicrm/event/info",
    ];
    if (strpos($current_uri, 'civicrm') !== false && in_array($current_uri, $paths)) {
      $eventId = \Drupal::request()->query->get('id');
      if (!$eventId) {
        return;
      }
      $event = civicrm_api3('Event', 'get', ['id' => $eventId, 'return' => ["title", "summary", EVENT_IMAGE]])['values'];
      $ogTitle = array(
        '#tag' => 'meta',
        '#attributes' => array(
          'property' => 'og:title',
          'name' => 'title',
          'content' => $event[$eventId]['title'],
        ),
      );

      $page['#attached']['html_head'][] = [$ogTitle, 'ogTitle'];

      if (!empty($event[$eventId]['summary'])) {
        $ogDescription = array(
          '#tag' => 'meta',
          '#attributes' => array(
            'property' => 'og:description',
            'name' => 'description',
            'content' => $event[$eventId]['summary'],
          ),
        );

        $page['#attached']['html_head'][] = [$ogDescription, 'ogDescription'];
      }

      $ogUrl = array(
        '#tag' => 'meta',
        '#attributes' => array(
          'property' => 'og:url',
          'name' => 'canonical_url',
          'content' => \Drupal::request()->getSchemeAndHttpHost() . \Drupal::request()->getRequestUri(),
        ),
      );

      $page['#attached']['html_head'][] = [$ogUrl, 'ogUrl'];

      if (!empty($event[$eventId][EVENT_IMAGE])) {
        // Fetch the image from database.
        $imageUri = CRM_Core_DAO::singleValueQuery("SELECT uri FROM civicrm_file WHERE id = %1", [1 => [$event[$eventId][EVENT_IMAGE], 'Integer']]);
        $ogImage = array(
          '#tag' => 'meta',
          '#attributes' => array(
            'property' => 'og:image',
            'name' => 'image',
            'content' => \Drupal::request()->getSchemeAndHttpHost() . '/sites/default/files/civicrm/custom/' . $imageUri,
          ),
        );

        $page['#attached']['html_head'][] = [$ogImage, 'ogImage'];
      }

      $ogType = array(
        '#tag' => 'meta',
        '#attributes' => array(
          'property' => 'og:type',
          'name' => 'type',
          'content' => 'article',
        ),
      );

     $page['#attached']['html_head'][] = [$ogType, 'ogType'];
  }
  if (strpos($current_uri, 'service-listing') !== FALSE && strpos($current_uri, 'service-listing-application') === FALSE && strpos($current_uri, 'service-listing-thankyou') === FALSE) {
    $parts = explode('/', $current_uri);
    \Drupal::service('civicrm')->initialize();
    $contactDetails = \civicrm_api3('Contact', 'get', ['id' => $parts[1]]);
    if (!empty($contactDetails['values'])) {
      $displayName = $contactDetails['values'][$contactDetails['id']]['display_name'];
      foreach ($page['#attached']['html_head'] as $key => $tagDetails) {
        if ($tagDetails[1] === 'title') {
          $content = str_replace('Self-employed ', '', $displayName) . ' ' . $tagDetails[0]['#attributes']['content'];
          $page['#attached']['html_head'][$key][0]['#attributes']['content'] = $content;
        }
      }
    }
  }
}

function jma_customizations_page_attachments_alter(array &$attachments) {
  $uri = \Drupal\Core\Url::fromRoute('<current>');
  $current_uri = $uri->getInternalPath();
  $paths = [
    "civicrm/event/register",
    "civicrm/event/info",
  ];
  if (strpos($current_uri, 'civicrm') !== false && in_array($current_uri, $paths)) {
    $invalidMetas = [
      'title',
      'description',
    ];
    foreach ($attachments['#attached']['html_head'] as $key => $attachment) {
      if (in_array($attachment[1], $invalidMetas)) {
        unset($attachments['#attached']['html_head'][$key]);
      }
    }
  }
}

function jma_customizations_preprocess_html(&$variables) {
  $variables['service_title'] = FALSE;
  $uri = \Drupal\Core\Url::fromRoute('<current>');
  $current_uri = $uri->getInternalPath();
  if (strpos($current_uri, 'service-listing') !== FALSE && strpos($current_uri, 'service-listing-application') === FALSE && strpos($current_uri, 'service-listing-thankyou') === FALSE) {
    $parts = explode('/', $current_uri);
    \Drupal::service('civicrm')->initialize();
    $contactDetails = \civicrm_api3('Contact', 'get', ['id' => $parts[1]]);
    if (!empty($contactDetails['values'])) {
      $variables['service_title'] = str_replace('Self-employed ', '', $contactDetails['values'][$contactDetails['id']]['display_name']) . ' ';
    }
  }
}

function jma_customizations_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  if ($form_id === "views_exposed_form" && $form['#id'] == "views-exposed-form-events-page-1") {
    $anyText = '- Any - ';
    if (\Drupal::languageManager()->getCurrentLanguage()->getId() == 'fr') {
      $anyText = '- Tous -';
    }
    $options = [
      'All' => $anyText,
    ];
    $eventTypes = CRM_Core_DAO::executeQuery("SELECT v.value, v.label AS label, v.name AS name
      FROM civicrm_event e
      INNER JOIN civicrm_option_value v ON v.value = e.event_type_id
      INNER JOIN civicrm_option_group g ON g.id = v.option_group_id
      WHERE e.is_active = 1 AND g.name = 'event_type' AND DATE_FORMAT(e.start_date, '%Y-%m-%d') >= CURRENT_DATE() GROUP BY v.value ORDER BY v.label")->fetchAll();
    foreach ($eventTypes as $eventType) {
      if ($eventType['name'] == "Fundraising with multi pax event") {
        $eventType['label'] = "Fundraiser";
      }
      $options[$eventType['value']] = $eventType['label'];
    }
    $form['event_type_id']['#options'] = $options;
  }
}

function jma_customizations_views_pre_render(ViewExecutable &$view) {
  if ($view->id() == 'event_map') {
    $view->element['#attached']['library'][] = 'jma_customizations/jma_customizations';
    $results = $view->result;
    // Find a better way to do this, for now, using a sample event.
    $event_ent = \Drupal::entityTypeManager()->getStorage('civicrm_event')->load(1327);
    foreach ($results as $i => &$row) {
      if (!empty($row->_entity)) {
        // Event is loaded here.
        // TODO: Derive the base URL
        $viewLink = "<a href='https://jma.staging.autismontario.com/civicrm/event/info?reset=1&id=" . $row->_entity->get('id')->value . "' target='_blank'>View event</a>";
        $row->_entity->set('id', $viewLink);
      }
      else {
        // Contact is loaded here.
        $contact_ent = \Drupal::entityTypeManager()->getStorage('civicrm_contact')->load($row->id);
        $row->_entity = $event_ent;
        $row->_entity->set('title', $contact_ent->get('display_name')->value);
        // TODO: Derive the base URL
        $viewLink = "<a href='https://jma.staging.autismontario.com/civicrm/contact/view?reset=1&cid=" . $row->id . "' target='_blank'>View service listing</a>";
        $row->_entity->set('id', $viewLink);
      }
    }
    $view->result = $results;
  }
  if ($view->id() == 'search_solr_' || $view->id() == 'service_listing') {
    $view->element['#attached']['library'][] = 'jma_customizations/jma_customizations';
    $view->element['#attached']['library'][] = 'jma_customizations/service_listing';
    $view->element['#attached']['library'][] = 'jma_customizations/search_facet';
  }
}

/**
 * Implements hook_views_pre_execute().
 */
function jma_customizations_views_pre_execute(ViewExecutable &$view) {
  if ($view->id() == 'event_map') {
    $view2 = Views::getView('contact_map');
    $view2->build('page_1');
    $other_query = $view2->build_info['query'];

    $other_query->addField('civicrm_contact__field_geolocation', 'field_geolocation_lat_sin', 'field_geolocation_lat_sin');
    $other_query->addField('civicrm_contact__field_geolocation', 'field_geolocation_lat_cos', 'field_geolocation_lat_cos');
    $other_query->addField('civicrm_contact__field_geolocation', 'field_geolocation_lng_rad', 'field_geolocation_lng_rad');

    $view->build_info['query']->addField('civicrm_event__field_geolocation', 'field_geolocation_lat_sin', 'field_geolocation_lat_sin');
    $view->build_info['query']->addField('civicrm_event__field_geolocation', 'field_geolocation_lat_cos', 'field_geolocation_lat_cos');
    $view->build_info['query']->addField('civicrm_event__field_geolocation', 'field_geolocation_lng_rad', 'field_geolocation_lng_rad');
    $view->build_info['query']->union($other_query);

    $query = db_select($view->build_info['query'], 'location')->fields('location');

    if (!empty($view->exposed_data['lat'])) {
      $lat = $view->exposed_data['lat'];
    }
    if (!empty($view->exposed_data['lng'])) {
      $lng = $view->exposed_data['lng'];
    }
    $distance = 16.09344; // 10 Km
    if (!empty($view->exposed_data['field_geolocation_proximity'])) {
      $distance = $view->exposed_data['field_geolocation_proximity'];
    }
    $query = db_select($view->build_info['query'], 'location')->fields('location');

    $view->build_info['query'] = $query;
    if (!empty($lat) && !empty($lng)) {
      $fragment = ProximityTrait::getProximityQueryFragment('location', 'field_geolocation', $lat, $lng);
      $fragment .= " <= :distance";
      $view->build_info['query']->where($fragment, [':distance' => $distance]);
    }
  }
}

function jma_customizations_login_user_login($account) {
  $current_route = \Drupal::routeMatch()->getRouteName();
  $destination = \Drupal::request()->query->get('destination');
  if ($destination && $destination != '/user/login') {
    return;
  }
  if (!in_array($current_route, ['user.reset', 'user.reset.login'])) {
    $current_user = \Drupal::currentUser();
    $roles = (array) $current_user->getRoles();
    if (in_array('authorized_contact', $roles)) {
      $response = new RedirectResponse(URL::fromUserInput('/civicrm/service-listing-application')->toString());
      $response->send();
    }
  }
}

function jma_customizations_theme($existing, $type, $theme, $path) {
  return array(
      'views_view_unformatted--service_listing--page_1' => [
      'render element' => 'elements',
//      'template' => 'views_view_unformatted--service_listing--page_1',
      'base hook' => 'view',
    ],
  );

}

function getCampDates($from, $to) {
  $content = 'From: ' . date('l, F j Y', strtotime($from)) . ' To: ' . date('l, F j Y', strtotime($to));
  if (\Drupal::languageManager()->getCurrentLanguage()->getId() == 'fr') {
    $english_days = array('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday');
    $french_days = array('lundi', 'mardi', 'mercredi', 'jeudi', 'vendredi', 'samedi', 'dimanche');
    $english_months = array('January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December');
    $french_months = array('janvier', 'f√©vrier', 'mars', 'avril', 'mai', 'juin', 'juillet', 'ao√ªt', 'septembre', 'octobre', 'novembre', 'd√©cembre');
    $content = str_replace($english_months, $french_months, str_replace($english_days, $french_days, $content));
  }
  return $content;
}
